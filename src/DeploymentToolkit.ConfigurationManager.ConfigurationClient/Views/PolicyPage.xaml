<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="DeploymentToolkit.ConfigurationManager.ConfigurationClient.Views.PolicyPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DeploymentToolkit.ConfigurationManager.ConfigurationClient.Views"
    xmlns:models="using:DeploymentToolkit.ConfigurationManager.ConfigurationClient.Models.CCM.Policy"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Visibility="{x:Bind ViewModel.ErrorMessageVisibility}">
            <InfoBar x:Uid="InfoBar_AdminRequired" IsOpen="True" Severity="Error">
                <Button x:Uid="InfoBar_AdminRequired_Restart" Margin="0, 0, 0, 10" Command="{x:Bind ViewModel.RestartButtonCommand}"/>
            </InfoBar>
        </Grid>

        <controls:BladeView Margin="0"
                    Padding="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BladeMode="Normal"
                    Visibility="{x:Bind ViewModel.ContentVisibility}">
            <controls:BladeView.Resources>
                <Style TargetType="controls:BladeItem">
                    <Setter Property="TitleBarVisibility" Value="Visible"/>
                    <Setter Property="Width" Value="Auto"/>
                </Style>
            </controls:BladeView.Resources>
            <controls:BladeItem Header="Target">
                <TreeView Grid.Column="0" ItemsSource="{x:Bind ViewModel.Policies}" SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Collapsed">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.CollapsedCommand}"/>
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="Expanding">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.ExpandingCommand}"/>
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="ItemInvoked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SelectedCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <TreeView.ItemTemplate>
                        <DataTemplate x:DataType="models:IPolicy">
                            <TreeViewItem Content="{x:Bind DisplayName}" ItemsSource="{x:Bind Children}" />
                        </DataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </controls:BladeItem>
            <controls:BladeItem Header="Class" IsOpen="{x:Bind ViewModel.ClassesBladeIsOpen, Mode=OneWay}">
                <ListView Grid.Column="1" ItemsSource="{x:Bind ViewModel.Classes.View, Mode=OneWay}" IsItemClickEnabled="True">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.PolicyClassSelectedCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:IPolicy">
                            <TextBlock Text="{Binding DisplayName}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </controls:BladeItem>
            <controls:BladeItem Header="Instance" IsOpen="{x:Bind ViewModel.InstancesBladeIsOpen, Mode=OneWay}">
                <ListView Grid.Column="2" ItemsSource="{x:Bind ViewModel.Instances.View, Mode=OneWay}" IsItemClickEnabled="True">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.PolicyInstanceSelectedCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:IPolicy">
                            <Grid>
                                <TextBlock Text="{Binding DisplayName}"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </controls:BladeItem>
            <controls:BladeItem Header="Properties" IsOpen="{x:Bind ViewModel.PropertiesBladeIsOpen, Mode=OneWay}" MaxWidth="2000">
                <controls:DataGrid SelectionMode="Single"
							   ItemsSource="{x:Bind ViewModel.Properties.View, Mode=OneWay}"
							   GridLinesVisibility="Horizontal"
							   IsReadOnly="True"
							   AutoGenerateColumns="False"
							   Grid.Column="3">
                    <controls:DataGrid.Columns>
                        <controls:DataGridTextColumn x:Uid="/PolicyPage/Header_Name" Binding="{Binding Name}"/>
                        <controls:DataGridTemplateColumn x:Uid="/PolicyPage/Header_Value">
                            <controls:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Value}" TextWrapping="Wrap" MaxWidth="2000" />
                                </DataTemplate>
                            </controls:DataGridTemplateColumn.CellTemplate>
                        </controls:DataGridTemplateColumn>
                    </controls:DataGrid.Columns>
                </controls:DataGrid>
            </controls:BladeItem>
        </controls:BladeView>
    </Grid>
</Page>
